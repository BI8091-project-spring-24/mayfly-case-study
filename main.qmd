---
title: "main document"
format: html
editor: visual
---

# Information

Study: A practical application of the pointedSDM package (with a reproducible workflow).

The aim of the project is to investigate how species distribution models can be used with different data types (presence-only, presence-absence, occurrence), and how the inclusion of both "good" and "less informative" data impact possible future predictions of species distribution. The R package pointedSDMs "[https://CRAN.R-project.org/package=PointedSDMs](https://cran.r-project.org/package=PointedSDMs)" by Mostert & O'hara is used for species distribution modelling. The case study will focus on the mayfly species *Baetis rhodani* , which is one of the most common mayfly species in Northern Europe (ref). Mayfly data is accessed through the Global Biodiversity Information Facility (GBIF, ref). Norway is selected as study area, due to the availability of both high-quality species occurrence data (NTNU University Museum) and presence-only data from national monitoring and research. Easily accessible physical, climatic and geographical data also makes Norway a good case-study.

This file documents the different steps in the mayfly case study, created for the course Advanced biology BI8091 at NTNU, Spring 2024.

# Setup

Setup: Load needed packages, and download data. Needs to be run before the rest of the script.

```{r setup}
#| output: false

## Custom install & load function
install.load.package <- function(x) {
  if (!require(x, character.only = TRUE)) {
    install.packages(x, repos = "http://cran.us.r-project.org")
  }
  require(x, character.only = TRUE)
}

package_vec <- c("here","dplyr","knitr",
                 "ggplot2","rgbif",
                 "here", "CoordinateCleaner",
                 "terra", "sf","mapview",
                 "PointedSDMs","INLA") # specify packages

## executing install & load for each package
sapply(package_vec, install.load.package)

```

The example data in this case is *Baetis rhodani* occurrence data from GBIF. Example on how to download can be found here: "https://data-blog.gbif.org/post/downloading-long-species-lists-on-gbif/". Download criteria:

-   Species: Baetis rhodani

-   Geographic area: Norway

-   Basis of record: Everything

-   Year range: 1950-current

Script for creating a new download request to GBIF. Only run if necessary.

```{r new_download_request}
# Load script: Import download
source(here::here("code","1_1_download.R"))

```

Script for importing existing download request.

```{r load_data}
#| output: true
#| error: true

# Load script: Import download
source(here::here("code","1_2_import_download.R"))

# Download file (NB: requires you to make "data" directory beforehand)
#download.file(mayfly_records, here("data", "insectdata.rda"))

## Load data
# load(here("data", "insectdata.rda"))
```

# Data cleaning

## 1. Remove flagged coordinate and time records

First, plot the raw coordinates to get an overview of the data:

```{r plot_data}
#| trunca: true

# Download world map 
wm <- borders("world", colour = "gray50", fill = "gray50")

# Plot data to get an overview
ggplot() +
  coord_fixed() +
  wm +
  geom_point(data = insectdata,
             aes(x = decimalLongitude, y = decimalLatitude),
             colour = "darkred",
             size = 0.5) +
  theme_classic()



```

Then, remove records with problematic coordinates and plot the flagged records.

```{r clean_coords}
## 2.2. Remove records with problematic coordinates ----

# Extract coordinate flags
coord_flags <- clean_coordinates(x = insectdata,
                                      lon = "decimalLongitude", 
                                      lat = "decimalLatitude",
                                      species = "acceptedScientificName",
                                      test = c("centroids", "equal", "gbif", "zeros","maps"))

# Get a summary of the detected flags
summary(coord_flags) # only 3 records flagged (centroids)

# Plot flagged records
plot(coord_flags, lon = "decimalLongitude", lat = "decimalLatitude")

# Exclude flagged records
insectdata_coords <- insectdata[coord_flags$.summary, ]
```

Finally, we test for temporal outliers on the taxon level, and remove the records:

```{r clean_time}
# Test for temporal outliers on taxon level
time_flags <- cf_age(x = insectdata_coords,
                  lon = "decimalLongitude",
                  lat = "decimalLatitude",
                  taxon = "species", 
                  min_age = "year", 
                  max_age = "year", 
                  value = "flagged") # Flagged 8 records

# Exclude records flagged for temporal outliers
insectdata_no_flags <- insectdata_coords[time_flags, ] 
```

## 2. Use metadata to improve data quality

To improve the precision and our confidence in the data further, we can use the metadata included in the dataset.

First, we make a boxplot of the coordinate precisions reported for the insect data:

```{r coord_boxplot}
# Boxplot of coordinate precision in insect data
ggplot(insectdata_no_flags, aes(x = coordinateUncertaintyInMeters)) +
  geom_boxplot(bins = 30, na.rm = TRUE) +
  labs(x = "Coordinate Uncertainty (m)", y = "Frequency") +
  theme_minimal() # A few records with relatively high coordinate uncertainty
```

Then, we calculate some summary stats for the coordinate uncertainties, make a table of each value's frequency, and inspect it:

```{r coord_summary}
mean(insectdata_no_flags$coordinateUncertaintyInMeters,
     na.rm = TRUE) #385.518
min(insectdata_no_flags$coordinateUncertaintyInMeters,
    na.rm = TRUE) #0.05
max(insectdata_no_flags$coordinateUncertaintyInMeters,
    na.rm = TRUE) #79110

# Table of frequency of each value of Coordinate Uncertainty
value_counts <- table(insectdata_no_flags$coordinateUncertaintyInMeters)
rmarkdown::paged_table(data.frame(value_counts))

# Which Coordinate uncertainty value is most common?
sorted_value_counts <- sort(value_counts, decreasing = TRUE)
most_frequent_value <- names(sorted_value_counts)[1]
most_frequent_value #1m coordinate uncertainty most frequent
```

Then, remove records with coordinate uncertainty \>3km and records with NA for coordinate uncertainty:

```{r}

# Remove records with coordinate uncertainty >3km and records with NA for coordinate uncertainty
insectdata_low_uncertainty <- insectdata_no_flags |>
  filter(coordinateUncertaintyInMeters <= 3000 | 
           is.na(coordinateUncertaintyInMeters))

# Check how many records are left
nrow(insectdata_no_flags) #23547
nrow(insectdata_low_uncertainty)#23516 (removed 31 records - not so bad)

```

Save the cleaned files. The cleaned dataset is now called insectdata_low_uncertainty (?).

```{r cleaned_datafiles}
# Save as .rda files
save(insectdata_no_flags, file= here::here("data","derived_data","insectdata_no_flags.rda"))

save(insectdata_low_uncertainty, file= here::here("data","derived_data","insectdata_low_uncertainty.rda"))

```

## Load cleaned datafiles.

Alternative to running all the cleaning steps.

```{r load_cleaned_datafiles}
load(here::here("data","derived_data","insectdata_no_flags.rda"))

load(here::here("data","derived_data","insectdata_low_uncertainty.rda"))

```

# Data exploration

MiljÃ¸direktoratet and NINA are both missing information on sampling protocol:

```{r}
only_mdir <- insectdata_low_uncertainty |> filter(institutionCode == "miljodir")
as.data.frame(table(only_mdir$samplingProtocol))

only_nina <- insectdata_low_uncertainty |> filter(institutionCode == "NINA")
as.data.frame(table(only_nina$samplingProtocol))

```

Plot the NINA and Mdir data:

```{r}
ggplot() +
  coord_fixed() +
  geom_point(data = only_mdir,
             aes(x = decimalLongitude, y = decimalLatitude),
             colour = "darkred",
             size = 0.5) +
  ggtitle("Only Miljodirektoratet") +
  theme_classic()

ggplot() +
  coord_fixed() +
  geom_point(data = only_nina,
             aes(x = decimalLongitude, y = decimalLatitude),
             colour = "darkred",
             size = 0.5) +
  ggtitle("Only NINA") +
  theme_classic()
```

# Analysis

Description: The analysis consists of several steps: Preparation of environmental variables, selection of invertebrate datapoints, running the SDMs.

## Selecting invertebrate datapoints

To limit data points with spatial inaccuracies, we want to see how far the *Baetis rhodani* data points typically are from freshwater. Since the species is found in running water in its larval stages, the Norwegian river network (Elvenett) will be used to calculate the distance. Then the distribution of distances to rivers will be plotted. This information will aid us in the next step, which is to limit the raster-layer used in the SDM.

```{r insect_distance_to_river}
# Code here

```

## Limit raster layer

Want to only model the area of Norway which is within a suitable distance from rivers. *Baetis rhodani* adults are winged and inhabit the terrestrial habitat for a limited time in order to reproduce. They cannot feed in their adult stage, so their life on land is short - typically lasting a few days. Therefore, winged adults may have been registered in areas which are not suitable for nymphs, and we aim to exclude adult observations to improve precision of the SDM.

```{r}


```

## SDMs

Using species distribution model(s) to investigate the distribution of the mayfly species *Baetis rhodani* in Norway. The goal is to compare the performance and predictions (?) of a SDM using

1)  Only high-quality data from structured sampling done by NTNU University museum. For this data, we have information on species occurrence, sampling method, and number of individuals per sampling unit.

2)  High quality NTNU University data as in 1, as well as lower-quality presence-only data

```{r SDMs}
# Run SDM script(s)
source(here::here("code","integrated_SDM.R"))

```

# Citations

Citing R and packages used, including package version.

```{r}
# Citing all packages used, including the package versions.
report::cite_packages()
```
